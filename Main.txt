// ==========================
// Weapon setups
// ==========================
// Effect Wands
var chillWands = [
  "ice wand dI +5", 
  "ice wand dI"]
var unmakeSwords = [
  "aether sword dU +4", 
  "aether sword dU +3"]
var stunlock = [
  "aether hammer +10",
  "poison hammer"]
var fireSwords = [
  "fire sword D +8", 
  "fire sword D +5"]
// ==========================
// Utility Functions
// ==========================
func Between(value, min, max)
  return value >= min & value <= max
func ItemCD(itemName)
  return item.GetCooldown(itemName)
func CanUse(itemName)
  return item.CanActivate(itemName)
func CanUseItem()
  return item.CanActivate()
func FormatTime(timeVal)
  return time.FormatCasual(timeVal)
func FoeWithin(val)
  return FoeBetween(0, val)
func FoeBetween(min, max)
  return foe.distance >= min & foe.distance <= max
func HasBerserk()
  return buffs.GetCount("berserk") > 0
// Cross lookup
func xLookup(val, arr1, arr2)
  var index = arr1.IndexOf(val)
  ?index > -1
    return arr2[index]
  :
    return false
func DictVal(dict, dictKey)
  for i = 0 .. dict.Count()-1
    var value = dict[i]
    ?value[0] = dictKey
      return value[1]
func CanApplyDebuf(debuff)
  //immune_to_｛stun, ranged, debuff_damage, physical｝
  ?(foe = "immune_to_" + debuff)
    return false
  var stack = foe.debuffs.GetCount(debuff)
  return foe.debuffs.string ! debuff
func DictVal(dict, dictKey)
  for i = 0 .. dict.Count()-1
    var value = dict[i]
    ?value[0] = dictKey
      return value[1]
// Brew Potion
func BrewBerserk()
  ?loc.begin
    brew wood + bronze
func BrewLucky()
  ?loc.begin
    brew stone + bronze
func BrewStrength()
  ?loc.begin
    brew stone
func BrewHeal()
  ?loc.begin
    brew tar
func BrewVamp()
  ?loc.begin
    brew tar + bronze
func RunAAC()
  ?item.left.state = 3
    equipL *0 wand      //temp item 1
    equipL @item.left@
  ?item.right.state = 3
    ?time % 2
      equipR throw      //temp item 1
    :
      equipR *0 shield  //temp item 2
    equip @item.right@
// ==========================
// Equipment 
// ==========================
var toEquipL
toEquipL = ""
var toEquipR
toEquipR = ""
var toEquip
toEquip = ""
var shouldActivateR
shouldActivateR = false
var shouldActivateL
shouldActivateL = false

func SetEquipL(itemName)
  toEquipL = itemName
  toEquip = ""
func SetEquipR(itemName)
  toEquipR = itemName
  toEquip = ""
func SetEquip(itemName)
  toEquipL = ""
  toEquipR = ""
  toEquip = itemName
func EquipSet(set) 
  SetEquipL(set[0])
  SetEquipR(set[1])
func ActivateItem()
  shouldActivateR = true
func ActivateLeft()
  shouldActivateL = true
// internal function
func __EquipItems()
  ?toEquipL
    equipL @toEquipL@
  ?toEquipR
    equipR @toEquipR@
  ?toEquip
    equip @toEquip@
// loadout for failsafe
var defaultLoadout = ["triskelion","compound shield"]
func SetDefaultLoadout(equips)
  defaultLoadout = equips
  EquipSet(defaultLoadout)
func RestoreDefaultLoadout()
  EquipSet(defaultLoadout)
// internal function
func __ActivateItems()
  ?shouldActivateR & CanUseItem()
    activate R
  ?shouldActivateL & CanUseItem()
    activate L

// ==========================
// Global variables
// ==========================
var hasEncountedBoss = false
var toSummon = "wisp"
var canPoison
canPoison = CanApplyDebuf("debuff_damage")
var loopCount = 0
var foeDebuffs
foeDebuffs = foe.debuffs.string
var smiteStack = 0
smiteStack = buffs.GetCount("smite")

// ResetGlobals(): Reset global variables
func __ResetGlobals()
  hasEncountedBoss = false

// ==========================
// Common Action Functions
// ==========================
func UsePot()
  ?item.potion ! empty
    activate potion
func UsePotWhen(condition)
  ?item.potion ! empty & condition
    activate potion
func EquipDash()
  ?ItemCD("bash") <= 0 
    SetEquipR("bashing shield") 
  :?ItemCD("dash") <= 0
    SetEquipR("dashing shield")
func InDashRange()
  return FoeBetween(11,16)
func TryDashInRange()
  ?InDashRange()
    EquipDash()
    return true
  return TryQtfDash()
func TryQtfDash()
  ?foe.distance <= 16
    return false
  ?ItemCD("quarterstaff") <= 0 & CanUseItem()
    SetEquip("quarterstaff")
    ActivateItem()
    return true
  return false
func TryStepback()
  ?ItemCD("mind") <= 0 & CanUseItem()
    SetEquipR("mind")
    return true
  return false
func TryBladeAbility()
  ?ItemCD("blade") <= 0 & FoeWithin(25) & foe.count > 7
    SetEquip("blade")
    ActivateItem()
    return true
  return false
func TryBardicheAbility()
  var cooldown = ItemCD("bardiche")
  ?FoeWithin(10) & cooldown <= 0 | cooldown > 870
    SetEquip("bardiche")
    ActivateItem()
    return true
  return false
func TryHammerAbility()
  ?ItemCD("heavy_hammer") & CanUseItem()
    SetEquip("heavy hammer")
    ActivateItem()
    return true
  return false
func TrySkeletonArmAbility()
  ?ItemCD("skeleton_arm") <= 0 & FoeWithin(6)
    SetEquip("skeleton_arm")
    ActivateItem()
    return true
  return false
func PickupWhenClose()
  ?pickup.distance < 10
    SetEquipR("star")
func FireTalisman()
  var cooldown = ItemCD("fire_talisman")
  ?cooldown > 130
    SetEquipL("fire talisman")
    return true
  ?(summon.count = 0 | summon.GetId() ! "cinderwisp")
  ^& cooldown <= 0 & CanUseItem()
    SetEquipL("fire talisman")
    ActivateLeft()
    return true
  return false
func AetherTalisman()
  var cooldown = ItemCD("aether_talisman")
  ?cooldown > 130
    SetEquipL("aether talisman")
    return true
  ?(summon.count = 0 | summon.GetId() ! "voidweaver")
  ^& cooldown <= 0 & CanUseItem()
    SetEquipL("aether talisman")
    ActivateLeft()
    return true
  return false
func __SummonTheGuy()
  ?toSummon = "none"
    return
  :?toSummon = "wisp"
    FireTalisman()
    return
  :?toSummon = "voidweaver"
    AetherTalisman()
    return
func TryMaskAbility()
  ?ItemCD("mask") <= 0 & CanUseItem()
    SetEquip("mask")
    ActivateItem()
    return true
  return false

// CalculateDPS(): Calculate DPS for BOSS
var dpsLastHP = 0
var dmgHistory = []
func CalculateDPS()
  ?foe ! boss
    dmgHistory.Clear()
    dpsLastHP = 0
    return
  var eHP = foe.armor + foe.hp
  ?eHP > dpsLastHP
    dmgHistory.Add(0)
  :?eHP = dpsLastHP
    ?dmgHistory.Count() ! 0
      dmgHistory.Add(0)
  :  
    dmgHistory.Add(dpsLastHP - eHP)
  var maxHist = 5 * 30
  ?dmgHistory.Count() > maxHist
    dmgHistory.RemoveAt(0)
  var total = 0
  for dmg : dmgHistory
    total += dmg
  dpsLastHP = eHP
  return total / (dmgHistory.Count() / 30.0)

// ==========================
// HUD realted functions
// ==========================
// Data vars
var allAbilities = [
  "mind","heavy_hammer","bardiche","blade",
  "skeleton_arm","mask","fire_talisman",
  "cinderwisp","quarterstaff","dash","bash",
]
var abilityHUDNames = [
  "mind","ham","bard", "bfg","arm","mask",
  "tali","wisp","qtr","dash","bash"
]
var potionEffectNames = ["berserk", "lucky_crit", "vampiric", "strength"]
func __PotionHUD()
  for effect : potionEffectNames
    var x = buffs.GetTime(effect)
    ?x > 0
      return string.Capitalize(effect) + ": " + x
  return "None"
func ColorCD(cd)
  ?cd > 0
    return "red"
  return "green"
func CooldownHUD()
  var x = screen.w - 10
  var x2 = screen.w - 5
  var y = 1
  for abi : allAbilities
    var cd = ItemCD(abi)   
    var text = xLookup(abi,allAbilities, abilityHUDNames)
    var textCol = ColorCD(cd)

    >`@x@,@y@,#@textCol@,
    ^@string.Capitalize(text)@

    >`@x2@,@y@,#@textCol@,
    ^@time.FormatDigital(cd)@
    y++
func __HUD()
  disable hud u 
  CooldownHUD()
  >`0,6,foe: @foe.id@
  >`0,7,State: @foe.state@ Time: @foe.time@ Damage: @foe.damage@
  >`0,8,Dist: @foe.distance@
  >`0,9,X: @pos.x@
  >`0,10,Foe Count: @foe.count@
  >`0,11,Potion: @__PotionHUD()@
  >`0,12,DPS: @CalculateDPS()@ 
  >`0,13,L: @toEquipL@ R: @toEquipR@ B: @toEquip@
  >`0,14,AI E: @ai.enabled@ P: @ai.paused@
  // TimeHUD()
  // DysaSplitHUD()

// ==========================
// Mine
// ==========================
func Mine()
  BrewHeal()
  UsePotWhen(hp < 20)

  SetDefaultLoadout(["triskelion","compound shield"])
  PickupWhenClose()

  // Mini Boss
  ?foe = explode
    MineMiniboss()
    return
  
  // Boss
  ?foe = boss | hasEncountedBoss
    hasEncountedBoss = true
    MineBoss()
    return

  ?TrySkeletonArmAbility()
    return

  // General
  ?TryBladeAbility()
    return

  ?FoeWithin(16)
    ?smiteStack ! 0 & foe.distance > 11 & foe.count < 3
      EquipSet(chillWands)
      return
    :
      ?TryDashInRange()
        return
      SetEquip("bardiche")

func MineMiniboss()
  ?FoeBetween(11,16)
    SetEquipR("dash") 
  ?FoeWithin(8)
    ?TryStepback() = false
      RestoreDefaultLoadout()

func MineBoss() 
  // Wait for boss engaging
  ?foe.state = 1 & ai.paused
    return

  ?TryMaskAbility()
    return

  ?foe.state = 32 & foe.time > 15
    ?TryStepback() = false
      RestoreDefaultLoadout()
    return
  //Melee attack
  :?foe.state = 33
    ?FoeWithin(8)
      ?foe.armor > 0
        SetEquip("heavy hammer")
        TryHammerAbility()
      :
        SetEquip("bardiche")
        TryBardicheAbility()
    :
      TryDashInRange()
  //Default Range attack
  :
    SetEquip("aether crossbow")

// ==========================
// Caves of Fear
// ==========================
func Caves()
  BrewHeal()
  UsePotWhen(hp < 20)

  SetDefaultLoadout(["triskelion","compound shield"])
  PickupWhenClose()

  ?foe = cool_bat & FoeWithin(16)
    CavesMiniBoss()
    return

  // Boss
  ?foe = boss | hasEncountedBoss
    CavesBoss()
    return

  ?TrySkeletonArmAbility()
    return

  // General
  ?TryBladeAbility()
    return

  ?FoeWithin(16)
    ?smiteStack ! 0 & foe.distance > 11
      EquipSet(chillWands)
    :
      ?TryDashInRange()
        return
      SetEquip("bardiche")

func CavesMiniBoss()
  ?TryDashInRange()
    return

  // MoondialSet(chillSwords)
  //EquipSet(stunlock)
  SetEquip("bardiche")

func CavesBoss()
  // Wait for boss engaging
  ?foe.state = 1 & ai.paused
    return

  // Dodge
  ?foe.state = 133 & foe.distance < 20
    ?TryStepback()
      return

  ?TryMaskAbility()
    return

  SetEquip("ice crossbow")

// ===================
// Haunted Halls
// ===================
var pallasStage = 0
func Halls()
  ?loc.loop
    pallasStage = 0

  SetDefaultLoadout(["triskelion","compound shield"])
  PickupWhenClose()

  // Boss
  ?foe = boss | hasEncountedBoss
    hasEncountedBoss = true
    ?foe = skeleton_boss
      pallasStage = 1
    :?foe = skeleton_boss_stage_2
      pallasStage = 2
    HallsBoss()
    return

  // Miniboss
  ?HallsMiniboss()
    return

  ?TrySkeletonArmAbility()
    return

  ?TryBladeAbility()
    return

  ?FoeWithin(16) 
    SetEquip("vigor staff")

var fightingRIP = false
var oldKi = 0
func HallsMiniboss()
  // Looping
  ?foe = big_tomb & foe.distance < 10
    oldKi = res.ki
    fightingRIP = true

  ?fightingRIP
    >h-1,-2,rip!
    ?TryDashInRange()
      return

    ?res.ki = oldKi
      SetEquip("vigor staff")
    // We have gained ki (defeated RIP)
    :
      fightingRIP = false
    // failsafes
    ?foe.count = 0 | (foe.GetCount(10) = 1 & foe ! big_tomb)
      fightingRIP = false
    return true
  return false

func HallsBoss()
  // do not unmake pallas!
  // toSummon = "wisp"

  ?TryMaskAbility()
    return

  // skelly bums
  ?pallasStage = 2 
    SetEquip("vigor staff")

    ?foe.distance < 6 & ItemCD("mind") <= 0
      SetEquipL("mind")
    return

  ?TryDashInRange()
    return

  SetEquip("bardiche")
  TryBardicheAbility()

// ===================
// Deadwood Canyon
// ===================
func Deadwood()
  toSummon = "voidweaver"
  BrewHeal()
  UsePotWhen(hp < 20)

  SetDefaultLoadout(["triskelion","compound shield"])
  PickupWhenClose()

  // Miniboss
  ?(foe = wasp | foe = wasp_nest) & FoeWithin(16)
    DeadwoodMinibosss()
    return

  // Boss
  ?hasEncountedBoss | (foe = boss & FoeWithin(20))
    hasEncountedBoss = true
    DeadwoodBoss()
    return

  ?TrySkeletonArmAbility()
    return

  ?FoeWithin(16)   
    ?TryDashInRange()
      return
    SetEquip("bardiche")
    // DeadwoodStutterStep()

func DeadwoodStutterStep()
  ?foe.distance <= 6
    SetEquip("skeleton")
  :?foe.distance <= 10
    // smoothcast or whatever
    ?time % 2 = 0
      SetEquipR("triskelion")
      SetEquipL("sword")
    :
      SetEquipR("hatchet")
      SetEquipL("sword")
  :
    SetEquipL("triskelion")

func DeadwoodMinibosss()
  ?TryDashInRange()
    return

  DeadwoodStutterStep()

func DeadwoodBoss()
  ?foe = poena
    DeadwoodWitchBoss()
  :?foe = tree_boss
    DeadwoodTreeBoss()

func DeadwoodWitchBoss()
  // trans
  ?foe.state = 1 & ai.paused
    ?TryMaskAbility()
      return
    ?TryBardicheAbility()
      return

  // dont bash
  ?InDashRange()
    ?ItemCD("dash") <= 0
      SetEquipR("dashing shield")
      return

  EquipSet(stunlock)

func DeadwoodTreeBoss()
  ?TryDashInRange()
    return  
  
  SetEquip("bardiche")
  TryBardicheAbility()

// ===================
// Icy Ridge
// ===================
func Icy()
  BrewHeal()
  UsePotWhen(hp < 20)

  SetDefaultLoadout(["triskelion","compound shield"])
  PickupWhenClose()

  // Boss
  ?foe = boss | hasEncountedBoss
    hasEncountedBoss = true
    IceBoss()
    return
  
  ?foe = giant ice elemental & ^FoeWithin(16)
    IceMiniboss()
    return

  ?(foe ! ice_pillar & foe ! ice_wall)
    ?TrySkeletonArmAbility()
      return

  ?TryBladeAbility()
    return

  ?FoeWithin(16)
    // Unmake pillar
    ?(foe = ice_pillar | foe = ice_wall) 
      ?TryDashInRange()
        return

      EquipSet(unmakeSwords)
      // MoondialSet(fireSwords)
      return
    SetEquip("fire crossbow")

func IceMiniboss()
  ?TryDashInRange()()
    return

  SetEquip("bardiche")

func IceBoss() 
  EquipSet(["fire sword D +8","fire shield"])

  // intro state
  ?foe.armor > 0
    SetEquip("heavy_hammer")
      return

  // blowing wind
  ?foe.state = 133
    SetEquip("fire crossbow")
    return
  :?foe.state = 32 | foe.state = 33
    ?TryMaskAbility()
      return
  
  // General strat
  ?TryDashInRange()
    return

  ?(foe = ice_pillar | foe = ice_wall) & FoeWithin(8)
    EquipSet(unmakeSwords)
    return
  ?foe = yeti & foe.state > 1
    ?TryHammerAbility()
      return
    :?TryBardicheAbility()
      return
  ?FoeWithin(8)
    // SetEquip("bardiche")
    EquipSet(fireSwords)
    return

// ===================
// Mushroom forest
// ===================
func Mushroom()
  toSummon = "voidweaver"

  BrewHeal()
  UsePotWhen(hp < 20)

  SetDefaultLoadout(["triskelion","compound shield"])
  PickupWhenClose()

  // Boss
  ?foe = boss| hasEncountedBoss
    hasEncountedBoss = true
    MushroomBoss()
    return

  // Miniboss
  ?foe = boss & FoeWithin(16)
    EquipChillSwordsOr(poisonSwords)
    return

  ?TryDashInRange()
    return
  :?TryBladeAbility()
    return

  ?FoeWithin(16)
    SetEquip("bardiche")

func MushroomBoss() 
  ?foe = mushroom_boss_fat 
    ?TryMaskAbility()
      return
    :?foe.state = 33
      ?TryStepback()
        return

  ?TryDashInRange()
    return 

  ?foe.armor > 0
    SetEquip("heavy_hammer")
    TryHammerAbility()
    return
  :
    // EquipChillSwordsOr(poisonSwords)
    SetEquip("bardiche")
    TryBardicheAbility()

// ==========================
// Main Function
// ==========================
func Main()
  toSummon = "voidweaver"

  RunAAC()

  ?loc.begin | loc.loop
    __ResetGlobals()

  ?loc.loop
    loopCount++

  ?loc = Mine
    Mine()
  :?loc = Caves
    Caves()
  :?loc = Halls
    Halls()
  :?loc = Deadwood
    Deadwood()
  :?loc = icy
    Icy()
  :?loc = Mushroom
    Mushroom()

  __SummonTheGuy()
  __EquipItems()
  __ActivateItems()
  // __ManageGP()
  __HUD()

Main()

// Find weak rune
// var weakRune = stone
// ?foe = vigor
//   weakRune = poison
// ?foe = poison
//   weakRune = ice
// ?foe = ice
//   weakRune = fire
// ?foe = fire
//   weakRune = aether
// ?foe = aether
//   weakRune = vigor